@inherits GamePage
@page "/games/{Type}"

<PageTitle>BracketHub Game - @Type</PageTitle>

<div class="page-background" style="@BackgroundUrlStyle"></div>

<div class="page-top-section" page-restrict="true">
	<div>
		<object class="tournament-item-icon" data="@ImageStatics.IconUrl(GameService.Type)" type="image/png">
			<img src="images/icons/default-icon.jpg" alt="">
		</object>
		<h2>@GameService.Game?.Name</h2>
	</div>
</div>

<TournamentGridComponent Title="Tournaments" IsGamePage="true" Tournaments="GameService.Tournaments?.Where(x => x.GameType == Type).ToList()">
	<a href="@Tournament.EditTournament.NavigateMe(Type ?? "OTHER")" class="a-button" style="position: absolute; top: 0; right: 0;">Create</a>
</TournamentGridComponent>

@code {
	public static string NavigateMe(string type) => $"games/{type}";

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender) // Jank but works without too much work
		{
			await GameService.GetTournaments();

			if (GameService.GameTask != null)
				await GameService.GameTask;

			StateHasChanged();
		}

		await base.OnAfterRenderAsync(firstRender);
	}
}
